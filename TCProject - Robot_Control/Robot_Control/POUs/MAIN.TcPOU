<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4020.12">
  <POU Name="MAIN" Id="{bda53a05-d64b-4adc-957d-35b84e53eb09}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
// =======================NC轴变量==========================
	Axis_Robot			: ARRAY[1..18] OF Axis;			// 定义六足轴参量(可以调整数据上限来调整电机数目)
	Axis_Delay			: Delay;						// 延迟程序
	Axis_Number 		: INT;							// 定义轴数目
	
	// ===================模块动作信号(按动作先后排列)==========
	Power_Execute 		: BOOL;							// 上电使能控制信号
	Axis_Power			: ARRAY[1..18] OF BOOL;			// 单电机使能
	Robot_Power			: BOOL;							// 机器人所有电机使能
	
	Home_Execute		: BOOL;							// 设置零点程序使能
	Axis_Start_Back 	: ARRAY[1..18] OF BOOL;			// 单电机找零回退信号
	Robot_Start_Back	: BOOL;							// 机器人所有电机回退信号
	Axis_Home_Set		: ARRAY[1..18] OF BOOL;			// 单电机设定零点信号
	Robot_Home_Set		: BOOL;							// 机器人所有电机设定零点信号
	
	Move_Execute		: BOOL;							// 绝对运动使能信号
	Robot_Stand_Execute	: BOOL;							// 机器人站立程序使能	
	Axis_Absolute_Eable	: ARRAY[1..18] OF BOOL;			// 单电机绝对运动使能信号
	Robot_Absolute_Eable: ARRAY[1..18] OF BOOL;			// 机器人站立使能信号
	Axis_Move_Position	: ARRAY[1..18] OF LREAL;		// 电机绝对运动位置			
	
	ExSetPoint_Execute	: BOOL;							// 机器人外部信号发生使能
	ExtSetPointEnable	: BOOL;							// 外部信号发生信号
	ExtSetPointDisable	: BOOL;							// 外部信号结束信号
	
	Reset_Execute		: BOOL;							// 电机驱动重置动作发生使能
	Axis_Reset			: ARRAY[1..18] OF BOOL;			// 单电机驱动重置信号使能
	Robot_Reset			: BOOL;							// 机器人整体电机驱动重置
	
	// ===================状态监测变量=======================
	Power_Status	: ARRAY[1..18] OF BOOL;				// 上电监测信号
	Home_Done		: ARRAY[1..18] OF BOOL;				// 找零监测信号
	MoveAbsoluteDone: ARRAY[1..18] OF BOOL;				// 电机运动监测信号
	
	Robot_Error		: BOOL;								// 机器人电机错误信号
	Axis_Error		: ARRAY[1..18] OF BOOL;				// 电机错误监测信号
	Axis_ErrorID	: ARRAY[1..18] OF UDINT;			// 电机错误号码监测信号
	
	Axis_ActPostion	: ARRAY[1..18] OF LREAL;			// 电机轴实际位置
	
	// =======================模块中间变量======================
	//HomeDone_Number	: LREAL :=0;					//完成找零的轴数
	ExSetPoint_Position	: ARRAY[1..18] OF LREAL;		// 外部信号位置
	t					: LREAL :=0;
	
	// =======================驱动器信号监测====================
	Current_Turque_Value: ARRAY[1..18] OF INT ;//AT%IW0 : ARRAY[1..18] OF INT ;	//电流、力矩相关值
	Max_Turque_Value 	: INT := 1000 ;					// 设置最大力矩边界值
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// =======================子程序使能(永久运行)===================
Variable_Monitor();			// 力矩监测子程序使能
Logic_Control();			// 逻辑控制子程序使能
Variable_Set();				// 各动作速度子程序使能
SetGenerator();				// 外部信号发生子程序使能
Robot_Action();				// 机器人整体运动子程序使能

// =====================电机驱动重置=============================
IF Reset_Execute THEN
	FOR Axis_Number := 1 TO 18 {BY 1} DO
		Axis_Robot[Axis_Number].Reset(Drive_Reset:= Axis_Reset[Axis_Number]);
	END_FOR
END_IF

// =======================电机上电===============================
IF Power_Execute THEN
	FOR Axis_Number := 1 TO 18 {BY 1} DO
		Axis_Robot[Axis_Number].Power(Axis_Enable:= Axis_Power[Axis_Number]);
	END_FOR
END_IF

// =======================找零程序===============================
IF Home_Execute THEN
	FOR Axis_Number := 1 TO 18 {BY 1} DO
		Axis_Robot[Axis_Number].Home(Back_Start:= Axis_Start_Back[Axis_Number], Drive_Home:= Axis_Home_Set[Axis_Number]);
	END_FOR
END_IF

// =======================站立程序===============================
IF Move_Execute THEN
	FOR Axis_Number := 1 TO 18 {BY 1} DO
		Axis_Robot[Axis_Number].Move_Absolute(	Drive_Move_Absolute:= Axis_Absolute_Eable[Axis_Number], 
												Absolute_Position:= Axis_Move_Position[Axis_Number]);
	END_FOR
END_IF
	
// =======================外部信号运动程序=======================
IF ExSetPoint_Execute THEN
	SetGenerator();			// 使能外部信号发生子程序
	FOR Axis_Number := 1 TO 18 {BY 1} DO
		Axis_Robot[Axis_Number].ExtSetPoint(Drive_ExtSetPointEnable:= ExtSetPointEnable, 
											Drive_ExtSetPointDisable:= ExtSetPointDisable, 
											ExSetPosition:= ExSetPoint_Position[Axis_Number]);
	END_FOR
END_IF
]]></ST>
    </Implementation>
    <Action Name="Logic_Control" Id="{3d827e38-563c-40ec-9c3b-9c7ac0040a24}">
      <Implementation>
        <ST><![CDATA[// =======================控制逻辑区==========================
// 保证所有的动作拥有合理的先后顺序，优化控制逻辑
// 也防止出现两个或两个以上动作同时进行的情况，保证控制安全

// ===================电机驱动重置逻辑========================
FOR Axis_Number := 1 TO 18 {BY 1} DO
	IF Axis_Error[Axis_Number] THEN
		Robot_Error := TRUE;
	END_IF
END_FOR

IF Robot_Error THEN
	Reset_Execute := TRUE;
ELSIF NOT Robot_Error THEN
	Reset_Execute := FALSE;
ELSIF NOT Reset_Execute THEN
	Axis_Reset[Axis_Number] := FALSE;
	Axis_Robot[Axis_Number].Reset(Drive_Reset:= Axis_Reset[Axis_Number]);
END_IF

// =====================上电程序逻辑==========================
IF NOT Power_Execute THEN
	FOR Axis_Number := 1 TO 18 {BY 1} DO
		Axis_Power[Axis_Number] := FALSE;
		Axis_Robot[Axis_Number].Power(Axis_Enable:= Axis_Power[Axis_Number]);
	END_FOR
END_IF

// =====================找零程序逻辑==========================
IF Home_Execute THEN
	FOR Axis_Number := 1 TO 18 {BY 1} DO
		IF Axis_Home_Set[Axis_Number] THEN			// 设定零点时，轴后退找零动作停止			
			Axis_Start_Back[Axis_Number] :=0;	
		END_IF
		IF Current_Turque_Value[Axis_Number] < Max_Turque_Value THEN	// 轴后退找零点时，不能设置零点，不能设定位置运动
			Axis_Home_Set[Axis_Number] :=0;
		END_IF
	END_FOR
	Move_Execute :=0;							// 设定零点时，不能进行其他运动
	ExSetPoint_Execute :=0;
ELSIF NOT Home_Execute THEN
	FOR Axis_Number := 1 TO 18 {BY 1} DO
		Axis_Start_Back[Axis_Number] :=0;
		Axis_Home_Set[Axis_Number] := 0;
	END_FOR
END_IF

// =====================机器人站立逻辑==========================
IF Move_Execute THEN
	//Absolute_Eable := TRUE;
	Home_Execute := FALSE;						// 站立运动使能时，机器人调零必须结束
	ExSetPoint_Execute :=0;						// 站立运动时，不能进行其他运动
ELSIF NOT Move_Execute THEN						// 站立运动不使能,轴不能运动
	FOR Axis_Number := 1 TO 18 {BY 1} DO
		Axis_Absolute_Eable[Axis_Number] := FALSE;
		Axis_Robot[Axis_Number].Move_Absolute(	Drive_Move_Absolute:= Axis_Absolute_Eable[Axis_Number], 
												Absolute_Position:= Axis_Move_Position[Axis_Number]);
	END_FOR
END_IF

// =====================外部信号发生逻辑========================
IF ExSetPoint_Execute THEN
	Home_Execute := FALSE;						// 外部信号发生使能时，机器人调零必须结束
	Move_Execute :=0;							// 外部信号发生时，不能进行其他运动
ELSIF NOT ExSetPoint_Execute THEN
	ExtSetPointEnable := 0;						// 外部信号发生不使能时，外部信号不能进入程序
ELSIF ExtSetPointDisable THEN
	ExtSetPointEnable :=0;						// 外部信号发生停止与外部信号发生开始不能同时进行
END_IF]]></ST>
      </Implementation>
    </Action>
    <Action Name="Robot_Action" Id="{128dd332-5f8d-474c-9a99-5924403b515f}">
      <Implementation>
        <ST><![CDATA[// =================机器人整体运动命令区======================
// 六足所有电机整体控制

// ====================机器人驱动重置=========================
IF Robot_Reset THEN
	IF Reset_Execute THEN
		Axis_Reset[Axis_Number] := TRUE;
		FOR Axis_Number := 1 TO 18 {BY 1} DO
			Axis_Robot[Axis_Number].Reset(Drive_Reset:= Axis_Reset[Axis_Number]);
		END_FOR
	END_IF
END_IF	

// ===================机器人所有电机上电======================
IF Robot_Power THEN	
	IF Power_Execute THEN
		FOR Axis_Number := 1 TO 18 {BY 1} DO
			Axis_Power[Axis_Number] := TRUE ;
		END_FOR
	END_IF
END_IF
	
// ===================机器人找零程序=======================
IF Robot_Start_Back THEN			// 回退程序
	IF Home_Execute THEN
		FOR Axis_Number := 1 TO 18 {BY 1} DO
			Axis_Start_Back[Axis_Number] := TRUE;
		END_FOR
	END_IF
END_IF
IF Robot_Home_Set THEN				// 标零程序
	Robot_Start_Back := FALSE;
	IF Home_Execute THEN
		FOR Axis_Number := 1 TO 18 {BY 1} DO
			Axis_Home_Set[Axis_Number] := TRUE;
		END_FOR
	END_IF
END_IF

// =====================站立程序===============================
IF Robot_Stand_Execute THEN
	IF Move_Execute THEN
		FOR Axis_Number := 1 TO 18 {BY 1} DO
			Axis_Absolute_Eable[Axis_Number] := TRUE;
		END_FOR
	END_IF
END_IF
]]></ST>
      </Implementation>
    </Action>
    <Action Name="SetGenerator" Id="{d9700682-384c-4584-aa59-df5c84595bcd}">
      <Implementation>
        <ST><![CDATA[// ====================外部信号发生测试区=====================
// 用来测试外部信号发生功能和电机相关参数

// =================外部信号正弦信号发生======================
IF ExtSetPointEnable THEN
	FOR Axis_Number := 1 TO 18 {BY 1} DO
		ExSetPoint_Position[Axis_Number]:=10*SIN(2*3.14*t);
		t := t+0.001;
	END_FOR
END_IF

// =================外部信号停止逻辑判断=======================
IF Axis_Robot[Axis_Number].State_ExtSetPiontDone THEN
	IF t>=20 THEN
		ExtSetPointEnable := FALSE;
		t:=0;
		ExtSetPointDisable := TRUE;
	END_IF
END_IF]]></ST>
      </Implementation>
    </Action>
    <Action Name="Variable_Monitor" Id="{f10c31a9-41f8-494a-aa9b-ca802e8ae9d8}">
      <Implementation>
        <ST><![CDATA[// =====================关键数据信号监测======================

// ==============最大力矩设置区(边界控制条件)=================
FOR Axis_Number := 1 TO 18 {BY 1} DO
	Axis_Robot[Axis_Number].Max_Turque_Value := Max_Turque_Value;
END_FOR

// =======================力矩检测区==========================
FOR Axis_Number := 1 TO 18 {BY 1} DO
	Axis_Robot[Axis_Number].Current_Turque_Value := Current_Turque_Value[Axis_Number];
END_FOR

// ====================轴实际位置检测区=======================
FOR Axis_Number := 1 TO 18 {BY 1} DO
	Axis_ActPostion[Axis_Number] := Axis_Robot[Axis_Number].ActPosition;
END_FOR

// =======================上电状态检测区======================
FOR Axis_Number := 1 TO 18 {BY 1} DO
	Power_Status[Axis_Number] := Axis_Robot[Axis_Number].State_PowerStatus;
END_FOR

// =======================找零状态检测区======================
FOR Axis_Number := 1 TO 18 {BY 1} DO
	Home_Done[Axis_Number] := Axis_Robot[Axis_Number].State_HomeDone;
END_FOR

// ===================电机绝对运动状态检测区==================
FOR Axis_Number := 1 TO 18 {BY 1} DO
	MoveAbsoluteDone[Axis_Number] := Axis_Robot[Axis_Number].State_MoveAbsoluteDone;
END_FOR

// =======================电机错误检测区======================
FOR Axis_Number := 1 TO 18 {BY 1} DO
	Axis_Error[Axis_Number] := Axis_Robot[Axis_Number].Axis_Error;
	Axis_ErrorID[Axis_Number] := Axis_Robot[Axis_Number].Axis_ErrorID;
END_FOR]]></ST>
      </Implementation>
    </Action>
    <Action Name="Variable_Set" Id="{851da005-a489-4fa0-a0ad-5bd551379857}">
      <Implementation>
        <ST><![CDATA[// =======================速度规定区==========================
FOR Axis_Number := 1 TO 18 {BY 1} DO						//此时每一个电机的速度都是一样的
	Axis_Robot[Axis_Number].Home_Velocity 	:= 10;			//找零速度(Axis_Jog中的速度)
	Axis_Robot[Axis_Number].Move_Absolute_Velocity	:=10;	//绝对运动速度
	Axis_Robot[Axis_Number].Move_Relative_Velocity	:=30;	//相对运动速度
END_FOR

// =======================位置规定区==========================
FOR Axis_Number := 1 TO 18 {BY 1} DO
	Axis_Move_Position[Axis_Number] := 100;
END_FOR

// =====================最大力矩规定区========================
Max_Turque_Value := 1000;

]]></ST>
      </Implementation>
    </Action>
    <LineIds Name="MAIN">
      <LineId Id="53" Count="43" />
      <LineId Id="148" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.Logic_Control">
      <LineId Id="2" Count="67" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.Robot_Action">
      <LineId Id="2" Count="46" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.SetGenerator">
      <LineId Id="2" Count="17" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.Variable_Monitor">
      <LineId Id="2" Count="35" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.Variable_Set">
      <LineId Id="2" Count="14" />
      <LineId Id="1" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>